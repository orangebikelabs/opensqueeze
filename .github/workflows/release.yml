name: Release
concurrency: ci-release

# only completes full build & test cycle if release will be issued
on:
  push:
    branches:
      - main
      - beta
      - alpha

env:
  # this is the command needed to bootstrap the tooling for semantic-release based on our release configuration
  semrel_package_bootstrap: "npm i semantic-release @semantic-release/changelog @semantic-release/git semantic-release-export-data conventional-changelog-conventionalcommits -D"

jobs:
  get-next-version:
    name: Detect next semantic version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: ${{ env.semrel_package_bootstrap }}
      - run: npx semantic-release --dry-run
        id: get-next-version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}     # use limited token for readonly version probing

      - run: "echo Detected next version: ${{ steps.get-next-version.outputs.new-release-version }}"
      - run: "echo Release will be published: ${{ steps.get-next-version.outputs.new-release-published }}"

    outputs:
      new-release-published: ${{ steps.get-next-version.outputs.new-release-published }}
      new-release-version: ${{ steps.get-next-version.outputs.new-release-version }}

  buildtest:
    env:
      next_version_name: ${{ needs.get-next-version.outputs.new-release-version }}
      next_build_number: ${{ github.run_number }}

    name: Build, Test & Release
    needs: get-next-version
    if: needs.get-next-version.outputs.new-release-published == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Setting up release keystore
        run:
          echo ${{ secrets.RELEASE_KEYSTORE_BASE64 }} | base64 --decode > app/release_keystore.jks

      - run: echo Building with version ${{ env.next_version_name }}, build number ${{ env.next_build_number }}

      - name: Build with Gradle
        run: >
          ./gradlew --no-daemon
          -PversionName=${{ env.next_version_name }}
          -PbuildNumber=${{ env.next_build_number }}
          -PreleaseKeystorePassword=${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          build

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: Java Tests            # Name of the check run which will be created
          path: "**/test-results/**/*.xml"    # Path to test results
          reporter: java-junit        # Format of test results

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Bootstrap npm Semantic Release packages
        run: ${{ env.semrel_package_bootstrap }}

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}     # use expanded permissions of GH_TOKEN secret for release
        run: npx semantic-release